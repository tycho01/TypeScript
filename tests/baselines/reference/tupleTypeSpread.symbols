=== tests/cases/compiler/tupleTypeSpread.ts ===
// type a = [1, ...[2]];
// type Boom<T extends string> = [...T];
type Combine<Head, Tail extends any[]> = [Head, ...Tail];
>Combine : Symbol(Combine, Decl(tupleTypeSpread.ts, 0, 0))
>Head : Symbol(Head, Decl(tupleTypeSpread.ts, 2, 13))
>Tail : Symbol(Tail, Decl(tupleTypeSpread.ts, 2, 18))
>Head : Symbol(Head, Decl(tupleTypeSpread.ts, 2, 13))
>Tail : Symbol(Tail, Decl(tupleTypeSpread.ts, 2, 18))

type b = Combine<1, [2, 3]>;
>b : Symbol(b, Decl(tupleTypeSpread.ts, 2, 57))
>Combine : Symbol(Combine, Decl(tupleTypeSpread.ts, 0, 0))

