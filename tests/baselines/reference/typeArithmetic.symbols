=== tests/cases/compiler/typeArithmetic.ts ===
function add<A extends number, B extends number>(a: A, b: B) {
>add : Symbol(add, Decl(typeArithmetic.ts, 0, 0))
>A : Symbol(A, Decl(typeArithmetic.ts, 0, 13))
>B : Symbol(B, Decl(typeArithmetic.ts, 0, 30))
>a : Symbol(a, Decl(typeArithmetic.ts, 0, 49))
>A : Symbol(A, Decl(typeArithmetic.ts, 0, 13))
>b : Symbol(b, Decl(typeArithmetic.ts, 0, 54))
>B : Symbol(B, Decl(typeArithmetic.ts, 0, 30))

    return a + b;
>a : Symbol(a, Decl(typeArithmetic.ts, 0, 49))
>b : Symbol(b, Decl(typeArithmetic.ts, 0, 54))
}

const addFixed = <A extends 1, B extends 2>(a: A, b: B) => a + b;
>addFixed : Symbol(addFixed, Decl(typeArithmetic.ts, 4, 5))
>A : Symbol(A, Decl(typeArithmetic.ts, 4, 18))
>B : Symbol(B, Decl(typeArithmetic.ts, 4, 30))
>a : Symbol(a, Decl(typeArithmetic.ts, 4, 44))
>A : Symbol(A, Decl(typeArithmetic.ts, 4, 18))
>b : Symbol(b, Decl(typeArithmetic.ts, 4, 49))
>B : Symbol(B, Decl(typeArithmetic.ts, 4, 30))
>a : Symbol(a, Decl(typeArithmetic.ts, 4, 44))
>b : Symbol(b, Decl(typeArithmetic.ts, 4, 49))

