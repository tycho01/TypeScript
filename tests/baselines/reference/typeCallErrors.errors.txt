tests/cases/compiler/typeCallErrors.ts(9,17): error TS2345: Argument of type '1' is not assignable to parameter of type 'number[]'.
tests/cases/compiler/typeCallErrors.ts(15,5): error TS2365: Operator '===' cannot be applied to types 'T' and '() => T'.


==== tests/cases/compiler/typeCallErrors.ts (2 errors) ====
    // binary function composition
    type Fn1 = <T1 extends number>(v1: T1[]) => { [k: string]: T1 };
    type Fn2 = <T2>(v2: { [k: string]: T2 }) => ReadonlyArray<T2>;
    let fn1 = null! as Fn1;
    let fn2 = null! as Fn2;
    type Fn3 = <T3 extends number[]>(v3: T3) => Fn2(Fn1(T3));
    let ones = null! as 1[];
    type Fn4 = Fn3(1); // errors, ok
    let x = fn2(fn1(1)); // errors with not assignable, ok
                    ~
!!! error TS2345: Argument of type '1' is not assignable to parameter of type 'number[]'.
    type X = Fn2(Fn1(1)); // errors with not assignable, ok
    
    function comparability<T>(x: T, y: () => T) {
        x === x;
        y === y;
        x === y; // rightfully errors
        ~~~~~~~
!!! error TS2365: Operator '===' cannot be applied to types 'T' and '() => T'.
    }
    